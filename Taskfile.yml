# https://taskfile.dev

version: '3'

tasks:
  clean:
    dir: '.'
    cmds:
      - sudo rm -rf ./build/
      - sudo rm -rf ./docker/

  lint:
    dir: './src'
    cmds:
      - golangci-lint run -c ../.golangci.yml

  build:
    dir: './src'
    cmds:
      - go tool swag init
      - go build -o ../build/antimony-server ./main.go
      - cp -r ../data/ ../build/
      - cp -r ../test/config.test.yml ../build/config.yml

  run:
    dir: './build'
    cmds:
      - task: build
      - sudo -E ./antimony-server -config=./config.yml
    env:
      SB_OIDC_SECRET: MHRymVDdv9t21ko4FGNGpXTvuLsjRtJd
      SB_DATABASE_PASSWORD: password123
      SB_NATIVE_USERNAME: admin
      SB_NATIVE_PASSWORD: admin

  build-docker:
    cmds:
      - DOCKER_HOST=unix:///var/run/docker.sock docker build -t antimony-backend .

  run-docker:
    dir: './docker'
    cmds:
      - task: build-docker
      - mkdir -p ./db
      - mkdir -p ./storage
      - mkdir -p ./run
      - cp -r ../data/ ./
      - cp -r ../test/config.docker.yml ./
      - DOCKER_HOST=unix:///var/run/docker.sock docker run
          -e SB_NATIVE_USERNAME=admin
          -e SB_NATIVE_PASSWORD=admin
          -v ./db/:/app/db/
          -v ./storage:/app/storage/
          -v ./run:/app/run/
          -v ./data:/app/data/
          -v ./config.yml:/app/config.yml
          -v /var/run/docker.sock:/var/run/docker.sock
          -p 3000:3000
          --privileged
          --network host
          --user root
          antimony-backend -sqlite=true -config=./config.yml

  swagger-docs:
    dir: './src'
    cmds:
      - go tool swag fmt
  test:
    dir: './src'
    cmds:
      - go test -v ./...

  test-coverage:
    dir: './src'
    cmds:
      - mkdir -p test/coverage
      - go test -v -coverprofile=test/coverage/coverage.out -coverpkg=./... ./...
      - go tool cover -html=test/coverage/coverage.out -o test/coverage/coverage.html
      - go tool cover -func=test/coverage/coverage.out
      - cmd: |
          echo "Coverage report generated at: test/coverage/coverage.html"
          echo "Total coverage:" $(go tool cover -func=test/coverage/coverage.out | grep total | awk '{print $3}')
        silent: false
